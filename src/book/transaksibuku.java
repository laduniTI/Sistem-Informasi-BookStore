package book;
import java.sql.Connection;
import java.sql.SQLException;
import java.sql.PreparedStatement;
import java.sql.Statement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class transaksibuku extends javax.swing.JFrame {
    private boolean isEditMode = false;
    private String currentIdBuku;

    public transaksibuku() {
        initComponents();
        buka_table();
        
    }

    public void buka_table() {
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("ID buku");
        model.addColumn("Judul");
        model.addColumn("Penulis");
        model.addColumn("Harga");
        model.addColumn("Jumlah");
        model.addColumn("Total Bayar");
        model.addColumn("Kembalian");
        model.addColumn("Total Harga");

        try {
            String sql = "SELECT * FROM transaksibuku";
            Connection conn = koneksi.ConnectionDB();
            PreparedStatement stm = conn.prepareStatement(sql);
            ResultSet res = stm.executeQuery();

            while (res.next()) {
                model.addRow(new Object[]{
                    res.getInt("id"),        // Pastikan nama kolom sesuai dengan yang ada di tabel
                    res.getString("judul"),  // Pastikan nama kolom sesuai dengan yang ada di tabel
                    res.getString("penulis"),// Pastikan nama kolom sesuai dengan yang ada di tabel
                    res.getInt("harga"),     // Pastikan nama kolom sesuai dengan yang ada di tabel
                    res.getInt("jumlah"),    // Pastikan nama kolom sesuai dengan yang ada di tabel
                    res.getInt("total_bayar"),// Pastikan nama kolom sesuai dengan yang ada di tabel
                    res.getInt("kembalian"), // Pastikan nama kolom sesuai dengan yang ada di tabel
                    res.getInt("total_harga")// Pastikan nama kolom sesuai dengan yang ada di tabel
                });
            }
            tbltransaksibuku.setModel(model);
        } catch (SQLException e) {
            // Tangkap dan cetak stack trace dari SQLException
            e.printStackTrace();
            // Tampilkan pesan error menggunakan JOptionPane
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        }
    }

    
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtid = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtjudul = new javax.swing.JTextField();
        txtharga = new javax.swing.JTextField();
        txtJumlah = new javax.swing.JTextField();
        txtTotalBayar = new javax.swing.JTextField();
        txtKembalian = new javax.swing.JTextField();
        txtTotalHarga = new javax.swing.JTextField();
        btnsimpan = new javax.swing.JButton();
        btnedit = new javax.swing.JButton();
        btnhapus = new javax.swing.JButton();
        btnkembali = new javax.swing.JButton();
        txtpenulis = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbltransaksibuku = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 51, 255));

        jPanel1.setBackground(new java.awt.Color(51, 51, 255));

        jPanel2.setBackground(new java.awt.Color(51, 255, 51));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 255));
        jLabel1.setText("TRANSAKSI BUKU");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(128, 128, 128))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 102));
        jLabel2.setText("ID Buku");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 51));
        jLabel3.setText("Judul");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 102));
        jLabel4.setText("Jumlah");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 102));
        jLabel5.setText("Total Bayar");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 102));
        jLabel6.setText("Kembalian");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 102));
        jLabel7.setText("Harga");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 102));
        jLabel8.setText("Total Bayar");

        btnsimpan.setBackground(new java.awt.Color(0, 255, 0));
        btnsimpan.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnsimpan.setForeground(new java.awt.Color(0, 0, 255));
        btnsimpan.setText("Simpan");
        btnsimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsimpanActionPerformed(evt);
            }
        });

        btnedit.setBackground(new java.awt.Color(0, 255, 204));
        btnedit.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnedit.setForeground(new java.awt.Color(0, 0, 255));
        btnedit.setText("Edit");
        btnedit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btneditActionPerformed(evt);
            }
        });

        btnhapus.setBackground(new java.awt.Color(255, 0, 51));
        btnhapus.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnhapus.setForeground(new java.awt.Color(255, 255, 255));
        btnhapus.setText("Hapus");
        btnhapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnhapusActionPerformed(evt);
            }
        });

        btnkembali.setBackground(new java.awt.Color(51, 255, 0));
        btnkembali.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnkembali.setForeground(new java.awt.Color(255, 0, 51));
        btnkembali.setText("Kembali");
        btnkembali.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnkembaliActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 51));
        jLabel9.setText("Penulis");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel9)
                    .addComponent(jLabel7))
                .addGap(73, 73, 73)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtid)
                    .addComponent(txtjudul)
                    .addComponent(txtharga)
                    .addComponent(txtJumlah)
                    .addComponent(txtpenulis, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(btnsimpan)
                        .addGap(31, 31, 31)
                        .addComponent(btnedit)
                        .addGap(29, 29, 29)
                        .addComponent(btnhapus)
                        .addGap(18, 18, 18)
                        .addComponent(btnkembali))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5))
                        .addGap(41, 41, 41)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtTotalBayar, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE)
                            .addComponent(txtKembalian)
                            .addComponent(txtTotalHarga))))
                .addContainerGap(49, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtTotalBayar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(txtKembalian, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtjudul, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTotalHarga, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnsimpan)
                            .addComponent(btnedit)
                            .addComponent(btnhapus)
                            .addComponent(btnkembali)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtpenulis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtharga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtJumlah, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        tbltransaksibuku.setBackground(new java.awt.Color(51, 255, 51));
        tbltransaksibuku.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID Buku", "Judul", "Penulis", "Harga", "Jumlah", "Total Bayar", "Kembalian", "Total Harga"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tbltransaksibuku.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbltransaksibukuMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbltransaksibuku);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane1)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnsimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsimpanActionPerformed
        // TODO add your handling code here
     try {
    String judul = txtjudul.getText();
    String penulis = txtpenulis.getText();
    int harga = Integer.parseInt(txtharga.getText());
    int jumlah = !txtJumlah.getText().isEmpty() ? Integer.parseInt(txtJumlah.getText()) : 0;
    int totalBayar = !txtTotalBayar.getText().isEmpty() ? Integer.parseInt(txtTotalBayar.getText()) : 0;
    int totalHarga = harga * jumlah;
    int kembalian = totalBayar - totalHarga;
    
    
    // Perbarui nilai komponen teks
txtKembalian.setText(String.valueOf(kembalian));
txtTotalHarga.setText(String.valueOf(totalHarga));

    // Periksa apakah jumlah dan totalBayar sudah terisi
    if (jumlah == 0 || totalBayar == 0) {
        JOptionPane.showMessageDialog(this, "Isi kolom Jumlah dan Total Bayar terlebih dahulu.");
        return;
    }

    Connection conn = koneksi.ConnectionDB();
    conn.setAutoCommit(false); // Mulai transaksi

    try {
        // Ambil nilai ID buku dari input
        String idBuku = txtid.getText();
        boolean isUpdate = false;

        if (!idBuku.isEmpty()) {
            // Cek apakah ID buku sudah ada di tabel transaksibuku
            String sqlCheck = "SELECT COUNT(*) FROM transaksibuku WHERE id = ?";
            PreparedStatement pstCheck = conn.prepareStatement(sqlCheck);
            pstCheck.setString(1, idBuku);
            ResultSet rsCheck = pstCheck.executeQuery();
            if (rsCheck.next() && rsCheck.getInt(1) > 0) {
                isUpdate = true;
            }
        }

        if (isUpdate) {
            // Periksa apakah data telah diubah sebelumnya
            String sqlCheckCompleteness = "SELECT judul, penulis, harga, jumlah, total_bayar FROM transaksibuku WHERE id = ?";
            PreparedStatement pstCheckCompleteness = conn.prepareStatement(sqlCheckCompleteness);
            pstCheckCompleteness.setString(1, idBuku);
            ResultSet rsCheckCompleteness = pstCheckCompleteness.executeQuery();
            if (rsCheckCompleteness.next()) {
                // Jika data sudah lengkap, tampilkan pesan kesalahan
                if (rsCheckCompleteness.getString("judul") != null &&
                    rsCheckCompleteness.getString("penulis") != null &&
                    rsCheckCompleteness.getInt("harga") > 0 &&
                    rsCheckCompleteness.getInt("jumlah") > 0 &&
                    rsCheckCompleteness.getInt("total_bayar") > 0) {
                    JOptionPane.showMessageDialog(this, "Data sudah lengkap dan tidak dapat diubah. Gunakan tombol Edit untuk mengubah data.");
                    return;
                }
            }
        }

        if (isUpdate) {
            // Simpan perubahan jika jumlah dan totalBayar sudah diisi
            String sqlUpdate = "UPDATE transaksibuku SET judul = ?, penulis = ?, harga = ?, jumlah = ?, total_bayar = ?, kembalian = ?, total_harga = ? WHERE id = ?";
            PreparedStatement pstUpdate = conn.prepareStatement(sqlUpdate);
            pstUpdate.setString(1, judul);
            pstUpdate.setString(2, penulis);
            pstUpdate.setInt(3, harga);
            pstUpdate.setInt(4, jumlah);
            pstUpdate.setInt(5, totalBayar);
            pstUpdate.setInt(6, kembalian);
            pstUpdate.setInt(7, totalHarga);
            pstUpdate.setString(8, idBuku);
            pstUpdate.executeUpdate();
        } else {
            // Simpan data baru ke dalam tabel book
            String sqlBook = "INSERT INTO book (judul, penulis, harga) VALUES (?, ?, ?)";
            PreparedStatement pstBook = conn.prepareStatement(sqlBook, Statement.RETURN_GENERATED_KEYS);
            pstBook.setString(1, judul);
            pstBook.setString(2, penulis);
            pstBook.setInt(3, harga);
            pstBook.executeUpdate();

            // Dapatkan ID buku yang baru saja dimasukkan
            ResultSet generatedKeys = pstBook.getGeneratedKeys();
            if (generatedKeys.next()) {
                int newIdBuku = generatedKeys.getInt(1);

                // Simpan data ke dalam tabel transaksibuku
                String sqlTransaksi = "INSERT INTO transaksibuku (id, judul, penulis, harga, jumlah, total_bayar, kembalian, total_harga) VALUES (?, ?, ?, ?, ?, ?, ?, ?)";
                PreparedStatement pstTransaksi = conn.prepareStatement(sqlTransaksi);
                pstTransaksi.setInt(1, newIdBuku);
                pstTransaksi.setString(2, judul);
                pstTransaksi.setString(3, penulis);
                pstTransaksi.setInt(4, harga);
                pstTransaksi.setInt(5, jumlah);
                pstTransaksi.setInt(6, totalBayar);
                pstTransaksi.setInt(7, kembalian);
                pstTransaksi.setInt(8, totalHarga);
                pstTransaksi.executeUpdate();
            } else {
                conn.rollback(); // Batalkan transaksi jika gagal mendapatkan ID buku
                JOptionPane.showMessageDialog(this, "Gagal mendapatkan ID buku yang baru saja dimasukkan.");
                return;
            }
        }

        conn.commit(); // Komit transaksi
        JOptionPane.showMessageDialog(null, "Data buku berhasil disimpan");

        // Bersihkan inputan pengguna setelah penyimpanan selesai
        txtid.setText("");
        txtjudul.setText("");
        txtpenulis.setText("");
        txtharga.setText("");
        txtJumlah.setText("");
        txtTotalBayar.setText("");
        txtjudul.requestFocusInWindow();
        buka_table();
    } catch (SQLException e) {
        conn.rollback(); // Batalkan transaksi jika terjadi kesalahan
        JOptionPane.showMessageDialog(this, "Error saat menyimpan data: " + e.getMessage());
    } finally {
        conn.setAutoCommit(true); // Kembali ke auto-commit default
    }
} catch (SQLException e) {
    JOptionPane.showMessageDialog(this, "Error saat menghubungkan ke database: " + e.getMessage());
} catch (NumberFormatException e) {
    JOptionPane.showMessageDialog(this, "Pastikan semua input diisi dengan benar.");
    txtharga.setText("");
    txtJumlah.setText("");
    txtTotalBayar.setText("");
}



    }//GEN-LAST:event_btnsimpanActionPerformed

    private void tbltransaksibukuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbltransaksibukuMouseClicked
        // TODO add your handling code here: 
         int selectedRow = tbltransaksibuku.getSelectedRow();
if (selectedRow >= 0) {
    Object idBukuTransaksiObj = tbltransaksibuku.getValueAt(selectedRow, 0); // Kolom ID buku transaksi
    Object judulObj = tbltransaksibuku.getValueAt(selectedRow, 1);
    Object penulisObj = tbltransaksibuku.getValueAt(selectedRow, 2);
    Object hargaObj = tbltransaksibuku.getValueAt(selectedRow, 3);
    Object jumlahObj = tbltransaksibuku.getValueAt(selectedRow, 4); // Kolom jumlah
    Object totalBayarObj = tbltransaksibuku.getValueAt(selectedRow, 5); // Kolom total bayar
    Object kembalianObj = tbltransaksibuku.getValueAt(selectedRow, 6); // Kolom kembalian
    Object totalHargaObj = tbltransaksibuku.getValueAt(selectedRow, 7); // Kolom total harga

    // Set nilai ke JTextField jika objek tidak null, kosongkan jika null
    txtid.setText(idBukuTransaksiObj != null ? idBukuTransaksiObj.toString() : "");
    txtjudul.setText(judulObj != null ? judulObj.toString() : "");
    txtpenulis.setText(penulisObj != null ? penulisObj.toString() : "");
    txtharga.setText(hargaObj != null ? hargaObj.toString() : "");
    txtJumlah.setText(jumlahObj != null ? jumlahObj.toString() : "");
    txtTotalBayar.setText(totalBayarObj != null ? totalBayarObj.toString() : "");
    txtKembalian.setText(kembalianObj != null ? kembalianObj.toString() : "");
    txtTotalHarga.setText(totalHargaObj != null ? totalHargaObj.toString() : "");

} else {
    JOptionPane.showMessageDialog(this, "Silakan pilih baris terlebih dahulu.");
}




    }//GEN-LAST:event_tbltransaksibukuMouseClicked

    private void btnhapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnhapusActionPerformed
        // TODO add your handling code here:
        int row = tbltransaksibuku.getSelectedRow();
if (row >= 0) {
    int idBuku = (int) tbltransaksibuku.getValueAt(row, 0);
    
    try {
        Connection conn = koneksi.ConnectionDB();
        
        // Query SQL untuk menghapus data dari tabel transaksibuku
        String sqlTransaksi = "DELETE FROM transaksibuku WHERE id = ?";
        PreparedStatement pstTransaksi = conn.prepareStatement(sqlTransaksi);
        pstTransaksi.setInt(1, idBuku);
        int rowsAffectedTransaksi = pstTransaksi.executeUpdate();
        
        // Query SQL untuk menghapus data dari tabel book
        String sqlBuku = "DELETE FROM book WHERE id = ?";
        PreparedStatement pstBuku = conn.prepareStatement(sqlBuku);
        pstBuku.setInt(1, idBuku);
        int rowsAffectedBuku = pstBuku.executeUpdate();
        
        if (rowsAffectedTransaksi > 0 && rowsAffectedBuku > 0) {
            JOptionPane.showMessageDialog(null, "Data berhasil dihapus");
            
            // Kosongkan semua kolom teks setelah penghapusan
            txtid.setText("");
            txtjudul.setText("");
            txtpenulis.setText("");
            txtharga.setText("");
            txtJumlah.setText("");
            txtTotalBayar.setText("");
            txtKembalian.setText("");
            txtTotalHarga.setText("");
            
            buka_table(); // Perbarui tabel setelah hapus
        } else {
            JOptionPane.showMessageDialog(null, "Gagal menghapus data");
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
    }
} else {
    JOptionPane.showMessageDialog(null, "Silakan pilih baris yang ingin dihapus");
}



    }//GEN-LAST:event_btnhapusActionPerformed

    private void btneditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btneditActionPerformed
        // TODO add your handling code here:
          try {
    String judul = txtjudul.getText();
    String penulis = txtpenulis.getText();
    int harga = Integer.parseInt(txtharga.getText());
    int jumlah = !txtJumlah.getText().isEmpty() ? Integer.parseInt(txtJumlah.getText()) : 0;
    int totalBayar = !txtTotalBayar.getText().isEmpty() ? Integer.parseInt(txtTotalBayar.getText()) : 0;
    int totalHarga = harga * jumlah;
    int kembalian = totalBayar - totalHarga;
    
    
     // Perbarui nilai komponen teks
txtKembalian.setText(String.valueOf(kembalian));
txtTotalHarga.setText(String.valueOf(totalHarga));

    // Periksa apakah jumlah dan totalBayar sudah terisi
    if (jumlah == 0 || totalBayar == 0) {
        JOptionPane.showMessageDialog(this, "Isi kolom Jumlah dan Total Bayar terlebih dahulu.");
        return;
    }

    Connection conn = koneksi.ConnectionDB();
    conn.setAutoCommit(false); // Mulai transaksi

    try {
        // Ambil ID buku dari baris yang dipilih
        int selectedRow = tbltransaksibuku.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Pilih data yang ingin diubah terlebih dahulu.");
            return;
        }
        String idBuku = tbltransaksibuku.getValueAt(selectedRow, 0).toString();

        // Perbarui data di tabel transaksibuku
        String sqlUpdate = "UPDATE transaksibuku SET judul = ?, penulis = ?, harga = ?, jumlah = ?, total_bayar = ?, kembalian = ?, total_harga = ? WHERE id = ?";
        PreparedStatement pstUpdate = conn.prepareStatement(sqlUpdate);
        pstUpdate.setString(1, judul);
        pstUpdate.setString(2, penulis);
        pstUpdate.setInt(3, harga);
        pstUpdate.setInt(4, jumlah);
        pstUpdate.setInt(5, totalBayar);
        pstUpdate.setInt(6, kembalian);
        pstUpdate.setInt(7, totalHarga);
        pstUpdate.setString(8, idBuku);
        pstUpdate.executeUpdate();

        conn.commit(); // Komit transaksi
        JOptionPane.showMessageDialog(null, "Data buku berhasil diperbarui");

        // Bersihkan inputan pengguna setelah pengeditan selesai
        txtid.setText("");
        txtjudul.setText("");
        txtpenulis.setText("");
        txtharga.setText("");
        txtJumlah.setText("");
        txtTotalBayar.setText("");
        txtKembalian.setText("");
        txtTotalHarga.setText("");
        txtjudul.requestFocusInWindow();
        buka_table();
    } catch (SQLException e) {
        conn.rollback(); // Batalkan transaksi jika terjadi kesalahan
        JOptionPane.showMessageDialog(this, "Error saat menyimpan data: " + e.getMessage());
    } finally {
        conn.setAutoCommit(true); // Kembali ke auto-commit default
    }
} catch (SQLException e) {
    JOptionPane.showMessageDialog(this, "Error saat menghubungkan ke database: " + e.getMessage());
} catch (NumberFormatException e) {
    JOptionPane.showMessageDialog(this, "Pastikan semua input diisi dengan benar.");
    txtharga.setText("");
    txtJumlah.setText("");
    txtTotalBayar.setText("");
}



    }//GEN-LAST:event_btneditActionPerformed

    private void btnkembaliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnkembaliActionPerformed
        // TODO add your handling code here:
         this.toBack();
        MenuUtama menuUtama = new MenuUtama();
        menuUtama.setVisible(true);
        menuUtama.toFront();
        dispose(); // Menutup JFrame saat ini
   
    }//GEN-LAST:event_btnkembaliActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(transaksibuku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(transaksibuku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(transaksibuku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(transaksibuku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new transaksibuku().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnedit;
    private javax.swing.JButton btnhapus;
    private javax.swing.JButton btnkembali;
    private javax.swing.JButton btnsimpan;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbltransaksibuku;
    private javax.swing.JTextField txtJumlah;
    private javax.swing.JTextField txtKembalian;
    private javax.swing.JTextField txtTotalBayar;
    private javax.swing.JTextField txtTotalHarga;
    private javax.swing.JTextField txtharga;
    private javax.swing.JTextField txtid;
    private javax.swing.JTextField txtjudul;
    private javax.swing.JTextField txtpenulis;
    // End of variables declaration//GEN-END:variables
}
